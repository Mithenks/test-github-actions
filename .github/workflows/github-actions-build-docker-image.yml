name: Build Docker Image

on:
  push:
    tags:
      - v*

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set output
        id: vars
        run: |
          echo ::set-output name=tag::${GITHUB_REF#refs/*/}
          echo ::set-output name=node::`echo ${GITHUB_REF#refs/*/} | sed -E 's/v([^-]+)-.*/\1/'`
          echo ::set-output name=angular::`echo ${GITHUB_REF#refs/*/} | sed -E 's/[^-]+-(.*)/\1/'`
      - name: Check output
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
          NG_CLI_VERSION: ${{ steps.vars.outputs.angular }}
          NODE_VERSION: ${{ steps.vars.outputs.node }}
        run: |
          echo $RELEASE_VERSION
          echo $NG_CLI_VERSION
          echo $NODE_VERSION
          docker build \
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --build-arg NODE_VERSION=${NODE_VERSION} \
            --build-arg NG_CLI_VERSION=${NG_CLI_VERSION} \
            -t bmeme/angular-dev:${NG_CLI_VERSION}-${NODE_VERSION} .

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  # push:
  #   # Ensure test job passes before pushing image.
  #   needs: test

  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'push'

  #   permissions:
  #     contents: read
  #     packages: write

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Build image
  #       run: docker build . --file Dockerfile --tag $IMAGE_NAME

  #     - name: Log into registry
  #       run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

  #     - name: Push image
  #       run: |
  #         IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

  #         # Change all uppercase to lowercase
  #         IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

  #         # Strip git ref prefix from version
  #         VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

  #         # Strip "v" prefix from tag name
  #         [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

  #         # Use Docker `latest` tag convention
  #         [ "$VERSION" == "$default-branch" ] && VERSION=latest

  #         echo IMAGE_ID=$IMAGE_ID
  #         echo VERSION=$VERSION

  #         docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
  #         docker push $IMAGE_ID:$VERSION
